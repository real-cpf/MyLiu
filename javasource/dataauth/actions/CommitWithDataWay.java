// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package dataauth.actions;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.core.objectmanagement.member.MendixObjectReference;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.FeedbackHelper;
import dataauth.proxies.DataWay;
import dataauth.proxies.constants.Constants;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class CommitWithDataWay extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String DataWayCode;
	private java.util.List<IMendixObject> objs;
	private IMendixObject obj;
	private java.lang.Boolean list;

	public CommitWithDataWay(IContext context, java.lang.String DataWayCode, java.util.List<IMendixObject> objs, IMendixObject obj, java.lang.Boolean list)
	{
		super(context);
		this.DataWayCode = DataWayCode;
		this.objs = objs;
		this.obj = obj;
		this.list = list;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE

		IContext iContext = getContext();

		List<DataWay> dataWays = DataWay.load(iContext,String.format("[Code='%s']",DataWayCode));
		if (dataWays.isEmpty()){
			throw new CoreException("can not find data way : " + DataWayCode );
		}
		DataWay dataWay = dataWays.get(0);

		List<MendixObjectReference> references = (List<MendixObjectReference>) obj.getReferences(iContext);
		references = references.stream().filter(e->{
			return e.getName().endsWith(Constants.getAuth_End_Str());
		}).collect(Collectors.toList());
		if (references.isEmpty()) {
			throw new CoreException("can not find references ");
		}

		String dataWayRefName = references.get(0).getName();
		List<IMendixObject> res = new ArrayList<>();
		if (list){
			for (int i = 0; i < objs.size(); i++) {
				objs.get(i).setValue(iContext,dataWayRefName,dataWay.getMendixObject().getId());
			}
			return Core.commit(iContext,objs);
		}else {
			obj.setValue(iContext,dataWayRefName,dataWay.getMendixObject().getId());
			res.add(Core.commit(iContext,obj));

			return res;

		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "CommitWithDataWay";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
